<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This file has been automatically generated by Doctor Max. DO NOT EDIT THIS FILE DIRECTLY.-->

<c74object name="bach.approx" module="bach" kind="patcher">

	<digest>
		Snap pitches or MIDIcents to microtonal grid
	</digest>

	<description>
		Approximates the incoming llll containing pitches or MIDIcents
		with the nearest pitches or MIDIcents in a specific microtonal grid.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">bachproject</metadata>
		<metadata name="tag">bach</metadata>
		<metadata name="tag">bach abstractions</metadata>
		<metadata name="tag">bach notation</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing original pitches or MIDIcents
			</digest>
			<description>
			</description>
		</inlet>
		<inlet id="1" type="INLET_TYPE">
			<digest>
				The microtonal division
			</digest>
			<description>
				In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
				by representing the number of steps in which each tone is divided.
				For the standard semitonal representation (where just sharps and flats suffice), one can stick with
				<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
				By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
				(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
				<br /> <br />
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="INLET_TYPE">
			<digest>
				The llll containing snapped pitches or MIDIcents
			</digest>
			<description>
			</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="tonedivision" optional="1" type="int">
			<digest>
				Microtonal division
			</digest>
			<description>
				In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
				by representing the number of steps in which each tone is divided.
				For the standard semitonal representation (where just sharps and flats suffice), one can stick with
				<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
				By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
				(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
				<br /> <br />
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				Output snapped pitches and MIDIcents
			</digest>
			<description>
				Performs the operation on the most recently input data.
			</description>
		</method>
		<method name="llll">
			<arglist />
			<digest>
				Snap midicents llll to microtonal grid
			</digest>
			<description>
				The function outputs an llll formatted as the incoming one, where each numeric
				element has been replaced by the nearest element in the choosen microtonal temperament.
				The same holds true for any pitch in the incoming llll.
				For instance, if the modulo is 12 (i.e. tonedivision = 2), the number 6020 would be snapped to the number 6000
				(precise midicents of middle C). The same number, with modulo = 48, would be snapped to 6025
				(one eighth-tone above). The temperament is defined by the tone division, set in the right inlet.
				As another example, if the modulo is 12 (tonedivision = 2), the pitch C#^4 will be snapped to C#4.
				<br /> <br />
				In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
				by representing the number of steps in which each tone is divided.
				For the standard semitonal representation (where just sharps and flats suffice), one can stick with
				<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
				By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
				(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
				<br /> <br />
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="out" get="1" set="1" type="symbol" size="1">
			<digest>
				Outlet Types
			</digest>
			<description>
				The <m>out</m> attribute is a sequence of characters identifying the outlet types (one character for each llll outlet). Characters can be one of the following: <br />
				<m>n</m> (default): 'native' output: faster and more precise between bach objects, but unreadable by standard Max objects (an "bach.llll" message appears instead). <br />
				<m>t</m>: 'text' output: slower and limited in size, but readable by standard Max objects. A plain llll in text format is a generic Max message.
				To keep the representation invertible (i.e., to allow a bach object receiving a text-format llll to interpret it exactly as if it was native format,
				except for the size limitation), some specific kinds of symbols are preceded by a backtick: namely, symbols containing parens, or containing textual
				representations of numbers or pitches, or beginning with a backtick, plus the symbols "null" and "nil" (distinct from the reserved words
				"null" and "nil" representing the empty list and the empty sublist) are preceded by a backtick. Moreover, the symbols "int", "float" or "list"
				are preceded by a backtick only if they are the first element of an llll, to distinguish them from the corresponding reserved messages of Max. <br />
				<m>m</m>: 'max' output: mostly equivalent to the "t" specifier, but no symbol is backticket except "int", "float" and "list" at the beginning of an llll.
				It is important to notice that, differently from text-format lllls proper, Max-format lllls might not be invertible even if they do not reach the size
				limit for Max message. This means that a bach object receiving a Max-format llll output from another bach object might interpret it differently
				from the original, or in some cases might even reject it. <br />
				<m>x</m>: disabled output (nothing is output) <br />
				<m>p</m>: 'portal' output: only used by bach.portal to intercept the @out attribute specified while creating the abstraction (see bach.portal). <br />
				The native output is recommended, unless communication with standard Max messages is needed.
				Disabling unused outputs can be useful if extreme optimization of the patch is needed.
				<br /> <br />
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Outlet Types" />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="text" />
			</attributelist>
		</attribute>
	</attributelist>

	<!--DISCUSSION-->
	<discussion>
		The conversion depends on the microtonal division, which is the <m>tonedivision</m> attribute
		of <o>bach.roll</o> and <o>bach.score</o>.
		The relationship with the modulo is: modulo/6 = tonedivision. <br /> <br />
		In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
		by representing the number of steps in which each tone is divided.
		For the standard semitonal representation (where just sharps and flats suffice), one can stick with
		<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
		By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
		(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
		<br /> <br />
		In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
		points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
		<br /> <br />
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="bach.expr" />
		<seealso name="bach.mc2pc" />
		<seealso name="bach.pc2mc" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (llll)">
			<description>
				The llll containing original pitches or MIDIcents.
			</description>
		</entry>
		<entry name ="Inlet 2 (int)">
			<description>
				The microtonal division.
				In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
				by representing the number of steps in which each tone is divided.
				For the standard semitonal representation (where just sharps and flats suffice), one can stick with
				<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
				By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
				(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
				<br /> <br />
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (llll)">
			<description>
				The llll containing snapped pitches or MIDIcents.
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
		The conversion depends on the microtonal division, which is the <m>tonedivision</m> attribute
		of <o>bach.roll</o> and <o>bach.score</o>.
		The relationship with the modulo is: modulo/6 = tonedivision. <br /> <br />
		In the bach environment, the tone division defines the microtonal accuracy of the symbolic representation,
		by representing the number of steps in which each tone is divided.
		For the standard semitonal representation (where just sharps and flats suffice), one can stick with
		<m>tonedivision</m> being 2, meaning: the tone is divided into two semitones.
		By increasing this value, the microtonal grid gets more dense: for instance, 4 is the quartertonal grid
		(where each tone is divided in 4 quartertones); 8 is the eight-tonal grid, and so on.
		<br /> <br />
		In the standard framework, the modulo is the number of subdivision of the octave (represented as a circle). The modulo is thus the number of
		points in this circle. The default and most common modulo is 12 (corresponding to semitonal grid). Modulo 24 is the quartertone grid, and so on.
		<br /> <br />
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
cent, midicent, approximate, snap, grid, microtone, nearest, pitch.
			</description>
		</entry>
	</misc>

</c74object>